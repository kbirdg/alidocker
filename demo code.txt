#源码的git地址
https://code.aliyun.com/haibing.jhb/devops.git

##SSH key 可以让你在你的电脑和Code服务器之间建立安全的加密连接。 先执行以下语句来判断是否已经存在本地公钥：
cat ~/.ssh/id_rsa.pub

##如下命令来生成ssh key：
ssh-keygen -t rsa -C "j**********@gmail.com"

##获取你生成的公钥：
cat ~/.ssh/id_rsa.pub

##如果打算拷贝你的公钥到你的粘贴板下，请参考你的操作系统使用以下的命令：
##Windows:
clip < ~/.ssh/id_rsa.pub
##Mac:
pbcopy < ~/.ssh/id_rsa.pub
##GNU/Linux (requires xclip):
xclip -sel clip < ~/.ssh/id_rsa.pub

##共享镜像地址，如果不考虑自己build基础镜像，可以考虑直接使用以下镜像
FROM registry.cn-beijing.aliyuncs.com/mini-app/miniapp:namibase

##构建基础镜像
docker build -t miniappbase .

##产物路径
package/target/nami-pack-linux64.zip

#不使用云效对打包文件进行压缩
build.output.nottgz=True

#指定dockerfile
docker.file=Dockerfile

#tag使用时间戳
docker.tag=${TIMESTAMP}

 #增加session保存功能（跟进客户端IP保持session，保持时间为10800秒）
 sessionAffinity: ClientIP
 sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

#查看正式环境节点资源信息
kubectl -n release get all --selector='app=svc-devops-release'

#查看正式环境DestinationRules
kubectl -n release get destinationrules svc-devops-release -o yaml 

#查看正式环境VirtualService
kubectl -n release get virtualservice svc-devops-release -o yaml

##创建正式环境Istio Gateway访问应用
vim devops-gateway-release.yaml

##使用i命令，插入以下内容
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: devops-gateway-release
  namespace: release
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    - '*'
    port:
      name: http
      number: 80
      protocol: HTTP

#按esc使用以下命令保存文件
:wq

#创建正式环境的gateway
kubectl -n release create -f devops-gateway-release.yaml 

#编辑虚拟服务，手动绑定容器的服务和gateway
kubectl -n release edit virtualservice svc-devops-release


# 输入i命令进入插入状态，添加gateways节点绑定devops-gateway-release
gateways:  
- devops-gateway-release

 # 添加需要监听的域名，域名自己定义
 - devops-release.xianwang2019.com 

 # 使用以下命令查看虚拟服务ip
 kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}'

 #在config.js中增加groupUrl配置
 groupUrl: `${host}/request/vote/group.js`, //查看分组结果

#在index.js中增加分组结果请求代码
   /**
   * 分组结果查看
   */
    wx.request({
      url: config.groupUrl,
      data: {
        age : 22
      },
      complete: function (res) {
        console.log("调用完成");
        console.log(res.data);
      }
    })
  },







